!include rcic-package.yaml
!include rpm.yaml
!include common-mpi.yaml
---
- package: LAMMPS Molecular Dynamics
  name: lammps
  release: 4
  basefamily: "{{name}}_{{version}}_{{compiler}}_{{compiler_version}}"
  baserpm: "{{basefamily}}"
  versions: !include versions.yaml
  version: "{{versions.lammps.version}}"
  reltype: "{{versions.lammps.rel}}"
  update: "{{versions.lammps.update}}"
  compiler: "{{versions.compiler.name}}"
  compiler_version: "{{versions.compiler.version}}"
  baseroot: "{{pkg_defaults.app_path}}/{{name}}/{{version}}/{{compiler}}/{{compiler_version}}"
  root: "{{baseroot}}/{{mpi}}/{{mpi_version}}"
  vendor_source: https://github.com/lammps/lammps/archive/{{reltype}}_{{version}}{{update}}.{{extension}}
  src_dir: "{{name}}-{{reltype}}_{{version}}{{update}}"
  description: |
    LAMMPS - Large-scale Atomic/Molecular Massively Parallel Simulator.
    A classical molecular dynamics simulation code designed to run
    efficiently on parallel computers. It is an open-source, distributed
    under the terms of the GNU Public License (GPL).
  optsfile: lammps.{{version}}.cmake
  eigen_md5: "9e30f67e8531477de4117506fe44669b"
  eigen_url: "https://gitlab.com/libeigen/eigen/-/archive"
  addfile:
    - "{{optsfile}}"
  builddir: builddir
  build:
    specmod: !eval "'doxygen/{{versions.doxygen}}' if '{{versions.os_release}}.{{compiler_version}}' == '9.8.4.0' else ''"
    preconfigure:
      sed -i -e 's/URL_MD5.*/URL_MD5 {{eigen_md5}}/' cmake/Modules/Packages/USER-SMD.cmake;
      sed -i -e 's%URL http.*%URL {{eigen_url}}/{{versions.eigen}}/eigen-{{versions.eigen}}.tar.gz%' cmake/Modules/Packages/USER-SMD.cmake
    patchfile: "{{name}}.{{version}}.patch"
    base_modules:
      - ffmpeg/{{versions.ffmpeg}}
      - hdf5/{{versions.hdf5}}/{{compiler}}.{{compiler_version}}
      - gsl/{{versions.gsl}}/{{compiler}}.{{compiler_version}}
      - "{{build.addmodules}}"
      - fftw/{{versions.fftw}}/{{compiler}}.{{compiler_version}}
      - netcdf-c/{{versions.netcdfc}}/{{compiler}}.{{compiler_version}}
    modules:
      - "{{build.base_modules}}"
      - cmake/{{versions.lammps.cmake}}
      - "{{build.specmod}}"
    gpu_opts:
    netcdf_opts: "-DNETCDF_INCLUDE_DIR=$$NETCDF/include"
    cmake_args: "-C ../../{{optsfile}} -DBUILD_SHARED_LIBS=on -DBUILD_LIB=on {{build.gpu_opts}} {{build.netcdf_opts}} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX={{root}}"
    pkgmake: >
      mkdir {{builddir}};
      cd {{builddir}};
      unset MAKEFLAGS;
      cmake {{build.cmake_args}} ../cmake;
      unset MAKEFLAGS; make #-j 2
  install:
     makeinstall: >
       cd {{builddir}};
       make install DESTDIR=$(ROOT);
       cd build;
       mv libkim-api.so* $(ROOT){{root}}/lib64
  requires:
    - ffmpeg_{{versions.ffmpeg}}
    - hdf5_{{versions.hdf5}}_{{compiler}}_{{compiler_version}}
    - gsl_{{versions.gsl}}_{{compiler}}_{{compiler_version}}
    - "{{build.addrequires}}"

# see ../README.md comments
