!include rcic-package.yaml
!include rpm.yaml
!include common-mpi.yaml
---
- package: LAMMPS Molecular Dynamics 
  name: lammps 
  release: 4
  basefamily: "{{name}}_{{version}}_{{compiler}}_{{compiler_version}}"
  baserpm: "{{basefamily}}"
  versions: !include versions.yaml
  version: "{{versions.lammps.version}}"
  reltype: "{{versions.lammps.rel}}"
  compiler: "{{versions.compiler.name}}"
  compiler_version: "{{versions.compiler.version}}"
  baseroot: "{{pkg_defaults.app_path}}/{{name}}/{{version}}/{{compiler}}/{{compiler_version}}"
  root: "{{baseroot}}/{{mpi}}/{{mpi_version}}"
  vendor_source: https://github.com/lammps/lammps/archive/{{reltype}}_{{version}}.{{extension}}
  src_dir: "{{name}}-{{reltype}}_{{version}}"
  description: |
    LAMMPS version {{version}} - Large-scale Atomic/Molecular Massively Parallel
    Simulator. LAMMPS is a classical molecular dynamics simulation code designed
    to run efficiently on parallel computers. It was developed at Sandia National
    Laboratories, a US Department of Energy facility, with funding from the DOE.
    It is an open-source, distributed under the terms of the GNU Public License (GPL)
  optsfile: lammps.{{version}}.cmake
  eigen_md5: "9e30f67e8531477de4117506fe44669b"
  eigen_url: "https://gitlab.com/libeigen/eigen/-/archive"
  addfile: 
    - "{{optsfile}}"
  builddir: builddir
  build:
    preconfigure:
      sed -i -e 's/URL_MD5.*/URL_MD5 {{eigen_md5}}/' cmake/Modules/Packages/USER-SMD.cmake;
      sed -i -e 's%URL http.*%URL {{eigen_url}}/{{versions.eigen}}/eigen-{{versions.eigen}}.tar.gz%' cmake/Modules/Packages/USER-SMD.cmake
    patchfile: "{{name}}.{{version}}.patch"
    addmodules:
      - fftw/{{versions.fftw}}/{{compiler}}.{{compiler_version}}
    base_modules:
      - ffmpeg/{{versions.ffmpeg}}
      - hdf5/{{versions.hdf5}}/{{compiler}}.{{compiler_version}}
      - gsl/{{versions.gsl}}/{{compiler}}.{{compiler_version}}
      - "{{build.addmodules}}"
# /gcc.8.4.0-openmpi.4.0.3 
    modules: 
      - "{{build.base_modules}}"
      - foundation 
    gpu_opts: 
    cmake_args: "-C ../../{{optsfile}} -DBUILD_SHARED_LIBS=on -DBUILD_LIB=on {{build.gpu_opts}} -DCMAKE_INSTALL_PREFIX={{root}}"
    pkgmake: > 
      mkdir {{builddir}};
      cd {{builddir}};
      cmake {{build.cmake_args}} ../cmake;
      make #-j 2
  install:
     makeinstall: >
       cd {{builddir}};
       make install DESTDIR=$(ROOT);
       cd build;
       mv libkim-api.so libkim-api.so.2 $(ROOT){{root}}/lib64
  requires:
    - ffmpeg_{{versions.ffmpeg}}
    - hdf5_{{versions.hdf5}}_{{compiler}}_{{compiler_version}}
    - gsl_{{versions.gsl}}_{{compiler}}_{{compiler_version}}
    - "{{build.addrequires}}"

# see ../README.md comments
